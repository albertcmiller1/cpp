compiler
    > g++ -std=c++20 main.cpp
    > g++ is the cpp compiler. try typing g++ in terminal 
    > to build a program: g++ -Wall -std=c++14 main.cpp


building = compiling + linking 
    compiling => translating to machine code 
    linking   => linking created objects and dependencies to a.out 


keywords: 
    > reserved words not able to be redfined 
    > https://en.cppreference.com/w/cpp/keyword

identifiers
    > something a programmer names 


operators: 
    > +, -, =, ::, etc 


preprocessor directives 
    ex) #include <iostream>

    process the included files for us to use 
    commonly used to conditionly compile code like if ur on windows or machine
    preprocessor does not understand cpp code


namespaces: 
    std::cout 
    std   => namespace (cpp standard namespace)
    count => function definition 
    ::    => scope resolution operator 


    example: 
        using namespace std;
            this will tell the compiler all the func defintions should come from the std namespace 


    other ex) 
    using std::cout; 
    using std::cin; 
    using std::endl;
        this will allow us to use these functions without defining the namespace across the entire file 
        it will only import these three functions 



primitive (fundamintal) data types: 
    > char types 
    > integer types 
        > signed
        > unsigned 
        > by default, integers are signed. so no need to specify unless you want unsigned 
    > floating-point types 
    > bool types 
    > Notes: 
        > size and precision is often compiler-dependent 


types of constants 
    > literal constants 
        > A literal constant is a value typed directly into your program wherever it is needed. For example, consider the following statement: long width = 5; This statement assigns the integer variable width the value 5. The 5 in the statement is a literal constant
        > ex ints) 12, 12U, 12L, 12LL
        > ex floats) 12.1, 12.1F, 12.1L
        > ex escape codes) \n, \r, \t, \b, \', \", \\
    > declared constants 
        > const keyword 
        > ex) const double pi {3.14};
    > constant expressions 
        > constexpr keyword
    > enumerated constants 
        > enum keyword 
    > defined constants 
        > #define 
        > ex) #define pi 3.14
        > cant be typed checked 
        > think of it as a blind find replace 
        > dont do this in modern cpp



